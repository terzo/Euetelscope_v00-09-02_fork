<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!-- 

==========================================================================================
                     Steering file template for the pysub framework

                               ==> fitter-tmp.xml <===

Author: Antonio Bulgheroni, INFN <mailto:antonio.bulgheroni@gmail.com>
Version: $Id: fitter-tmp.xml,v 1.7 2009-08-01 13:59:45 bulgheroni Exp $
==========================================================================================

--> 

<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

   <execute>
      <processor name="AIDA"/>
      <processor name="LoadRefHitDB"/>
      <processor name="LoadPreAlignment"/>
      <processor name="LoadAlignment"/>
      <processor name="ApplyAlignment"/>
      <processor name="Correlator"/>
      <processor name="DafFitter"/>
      <processor name="APIXTbTrack"/>
      <xgroup name="APIXDUTHisto"/>
      <processor name="Save"/>
      <processor name="MyEUTelUtilityPrintEventNumber"/>
   </execute>

   <global>
      <parameter name="LCIOInputFiles"> @InputFile@ </parameter>
      <parameter name="GearXMLFile" value="@GearPath@/@GearFile@"/>
      <parameter name="MaxRecordNumber" value="@MaxRecordNumber@"/>
      <parameter name="SkipNEvents" value="@SkipNEvents@"/>
      <parameter name="SupressCheck" value="false"/>
      <parameter name="Verbosity" value="MESSAGE"/>
   </global>

 <processor name="AIDA" type="AIDAProcessor">
 <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
  <!-- compression of output file 0: false >0: true (default) -->
  <parameter name="Compress" type="int" value="1"/>
  <!-- filename without extension-->
  <parameter name="FileName" type="string" value="@HistoPath@/@Output@-track-histo@MemCheckFlag@"/>
  <!-- type of output file xml (default) or root ( only OpenScientist)-->
  <parameter name="FileType" type="string" value="root"/>
 </processor>

  <processor name="LoadRefHitDB"     type="ConditionsProcessor">
    <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
    <parameter name="SimpleFileHandler" type="StringVec"> refhit    @DBPath@/@Output@-refhit-db.slcio referenceHit  </parameter>
    <parameter name="SimpleFileHandler" type="StringVec"> refhit31  @DBPath@/@Output@-refhit-db.slcio referenceHit  </parameter>
    <parameter name="SimpleFileHandler" type="StringVec"> refhit32  @DBPath@/@Output@-refhit-db.slcio referenceHit  </parameter>
  </processor>


 <processor name="LoadPreAlignment" type="ConditionsProcessor">
  <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
  <parameter name="SimpleFileHandler" type="StringVec"> prealign @DBPath@/@Output@-prealign-db.slcio        alignment </parameter>
 </processor>

 <processor name="LoadAlignment" type="ConditionsProcessor">
  <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:calvin:hobbes"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> align @AlignmentFile@ alignment </parameter>
 </processor>



  <processor name="ApplyAlignment" type="EUTelApplyAlignmentProcessor">
    <parameter name="alignmentCollectionNames">  align prealign  </parameter>
    <parameter name="hitCollectionNames">    alignedHit    prealignedhit   </parameter>
    <parameter name="refhitCollectionNames"> refhit32      refhit31 </parameter>
    <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> hit </parameter>
    <parameter name="ReferenceCollection" type="string" > refhit </parameter>
    <parameter name="ApplyToReferenceCollection" type="bool" value="1"/>
    <parameter name="DoAlignmentInOneGo" type="bool" value="true"/>
    <parameter name="HistogramSwitch" type="bool" value="false"/>
    <parameter name="DEBUG" type="bool" value="false"/>
    <parameter name="PrintEvents" type="int" value="0"/>
  </processor>

<processor name="Correlator" type="EUTelCorrelator">
 <!--EUTelCorrelator fills histograms with correlation plots-->
  <!--Hit collection name-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> alignedHit </parameter>
  <!--parameter name="OutputHitCollectionName" type="string"   lcioOutType="TrackerHit"> correlatedhit  </parameter -->
 <!-- -->
  <parameter name="DumpOffset" type="bool" > false </parameter>
  <parameter name="ReferenceCollection" type="string" > refhit </parameter>
  <parameter name="ApplyToReferenceCollection" type="bool" value="1"/>
  <parameter name="MinNumberOfCorrelatedHits" type="int" value="7"/>
  <parameter name="Events"  type="int" value="9999"/>

  <!--Residual cuts along both size in microns-->
    <parameter name="ResidualsXMax" type="FloatVec">  1.0  1.0  1.0   20.0  20.0   2.0  2.0  2.0           </parameter>
    <parameter name="ResidualsXMin" type="FloatVec"> -1.0 -1.0 -1.0  -20.0 -20.0  -2.0 -2.0 -2.0           </parameter>
    <parameter name="ResidualsYMax" type="FloatVec">  1.0  1.0  1.0   20.0  20.0   2.0  2.0  2.0           </parameter>
    <parameter name="ResidualsYMin" type="FloatVec"> -1.0 -1.0 -1.0  -20.0 -20.0  -2.0 -2.0 -2.0           </parameter>
</processor>


  <processor name="DafFitter" type="EUTelDafFitter">
    <parameter name="TelescopePlanes" type="IntVec"> 0 1 2 3 4 5 </parameter>
    <parameter name="DutPlanes" type="IntVec"> 20 21 </parameter>
    <parameter name="FitDuts" type="bool" value="false"/>
    <parameter name="MakePlots" type="bool" value="true"/>
    <parameter name="RequireNTelPlanes" type="float" value="6"/>
    <parameter name="HitCollectionName" type="string" lcioInType="TrackerHit"> alignedHit </parameter>
    <parameter name="TrackCollectionName" type="string" lcioInType="Track"> track </parameter>
    <parameter name="AlignmentCollectionNames">prealign align   </parameter>
    <parameter name="ReferenceCollection" type="string" > refhit32 </parameter>
    <parameter name="ApplyToReferenceCollection" type="bool" value="1"/>
    <parameter name="Ebeam" type="float" value="120"/>
    <parameter name="TelResolutionX" type="float" value="4.0"/>
    <parameter name="TelResolutionY" type="float" value="4.0"/>
    <parameter name="DutResolutionX" type="float" value="70"/>
    <parameter name="DutResolutionY" type="float" value="14"/>
    <parameter name="NominalDxdz" type="float" value="0.0"/>
    <parameter name="NominalDydz" type="float" value="0.0"/>
    <parameter name="FinderRadius" type="float" value="500" />
    <parameter name="Chi2Cutoff" type="float" value="1000"/>
    <parameter name="MaxChi2OverNdof" type="float" value="10"/>
    <parameter name="NDutHits" type="int" value="0"/>
  </processor>




 <processor name="APIXTbTrack" type="EUTelAPIXTbTrackTuple">
    <parameter name="OutputPath" type="string" value="@HistoPath@/tbtrack@RunNumber@.root"/>
    <!--Name of the input Track collection-->
    <parameter name="InputCollectionName" type="string" lcioInType="Track"> track </parameter>
    <!--Name of the input cluster collections-->
    <parameter name="InputDutPulseCollectionName" type="string" value="cluster_apix"/>
    <parameter name="InputTelPulseCollectionName" type="string" value="cluster_m26"/>
    <!--Name of the zs hit collection-->
    <parameter name="TelZsColName" type="string" value="original_zsdata"/>
    <parameter name="DutZsColName" type="string" value="original_zsdata_apix"/>
    <!-- Alignment constants-->
    <parameter name="AlignmentCollectionNames"> prealign align  </parameter>
    <parameter name="DoScales" type="bool" value="false"/>
    <parameter name="ReferenceCollection" type="string" > refhit </parameter>
    <parameter name="ApplyToReferenceCollection" type="bool" value="1"/>
  </processor>


 <processor name="Save" type="EUTelOutputProcessor">
 <!--Writes the current event to the specified LCIO outputfile. Eventually it adds a EORE at the of the file if it was missing Needs to be the last ActiveProcessor.-->
  <!--drops the named collections from the event-->
  <parameter name="DropCollectionNames" type="StringVec"> hit hit_eta3x3 alignedHit_eta3x3 </parameter>
  <!--drops all collections of the given type from the event-->
  <!--parameter name="DropCollectionTypes" type="StringVec"> SimTrackerHit SimCalorimeterHit </parameter-->
  <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
  <!--parameter name="FullSubsetCollections" type="StringVec" value="MCParticlesSkimmed"/-->
  <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
  <!--parameter name="KeepCollectionNames" type="StringVec" value="MyPreciousSimTrackerHits"/-->
  <!-- name of output file -->
  <parameter name="LCIOOutputFile" type="string" value="@ResultsPath@/@Output@-track@MemCheckFlag@.slcio"/>
  <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
  <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
  <!--Set it to true to remove intermediate EORE in merged runs-->
  <parameter name="SkipIntermediateEORE" type="bool" value="true"/>
  <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
  <xparameter name="SplitFileSizekB" type="int" value="1000000"/>
</processor>

 
  <group name="APIXDUTHisto" >
	<!-- ------------------------------------ -->
	<!-- -------- COMMON SETTINGS ----------- ->
	<!-- ------------------------------------ -->
  <!--Analysis of DUT performance based on the analytic track fit results-->
  <!--Name of the input DUT hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit">alignedHit </parameter>
  <!--Name of the input Track collection-->
  <parameter name="InputTrackCollectionName" type="string" lcioInType="Track"> track </parameter>
  <!--Alignment corrections for DUT: shift (in mm) in X, Y and rotation around Z-->
  <parameter name="DUTalignment" type="FloatVec"> 0.0 0.0 0.0 </parameter>
  <!--DUT sensor pitch in X-->
  <parameter name="DUTpitchX" type="double" value="0.25"/>
  <!--DUT sensor pitch in Y-->
  <parameter name="DUTpitchY" type="double" value="0.05"/>
  <!--Print out every DebugEnevtCount event-->
  <parameter name="DebugEventCount" type="int" value="100"/>
  <!--Maximum allowed distance between fit and matched DUT hit-->
  <parameter name="DistMax" type="double" value="0.5"/>
  <!--Name of the histogram information file-->
  <parameter name="HistoInfoFileName" type="string" value="@HistoInfoPath@/@HistoInfo@"/>
  <!--Id of telescope layer which should be used as DUT-->
  <!--Flag for manual DUT selection-->
  <parameter name="UseManualDUT" type="bool" value="1"/>
  <!--Use only events with 1 track reconstructed to enrich it with in-time tracks-->
  <parameter name="UseSingleTrackOnly" type="bool" value="false"/>
  <parameter name="onlyIntimeTracks" type="bool" value="true"/>
  <parameter name="DistMaxReference" type="double" value="1.0" />  

	<!---------------------------------------->
	<!------ END OF COMMON SETTINGS ---------->
	<!---------------------------------------->

	<!-- Now define processors for this group and specify options,
        which are different for each processor,
        in particular ID of the sensor to be treated as DUT, use reference plane or not,
		which plane to be used as DUT.
	 -->
  <processor name="DUTHisto21" type="EUTelDUTHistograms">
    <parameter name="ManualDUTid" type="int" value="21"/>
    <parameter name="referencePlaneID" type="int" value="20" />
  </processor>

  <processor name="DUTHisto20" type="EUTelDUTHistograms">
    <parameter name="ManualDUTid" type="int" value="20"/>
	<parameter name="referencePlaneID" type="int" value="21" />
  </processor>
 

  </group>
   
 <processor name="MyEUTelUtilityPrintEventNumber" type="EUTelUtilityPrintEventNumber">
 <!--EUTelUtilityPrintEventNumber prints event number to screen depending on the verbosity level-->
  <!--Print event number for every n-th event-->
  <parameter name="EveryNEvents" type="int" value="1000"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
  <!--print the event timestamp as read from LCIO-->
  <parameter name="printTimestamp" type="bool" value="false"/>
</processor>

</marlin>
